#pragma once

#include <CommonDef.h>

class CContainer
{
	DEFINE_BOOST_SHARED_PTR(CContainer)

public:
	
	virtual ~CContainer(void);

	void Test(void);

protected:
	explicit CContainer(void);

	/************************************************************************/
	/* 在vector尾部附件元素或删除元素都十分迅速		                        */
	/* 在vector中间或起始部分插入元素较费时(需要移动元素以保持相对顺序)     */
	/************************************************************************/
	void TestVector(void);

	/************************************************************************/
	/* 动态数组，可以向两端发展			                                    */
	/* 不论在尾部或头部插入元素都十分迅速                                   */
	/* 在中间插入元素则比较费时（需要移动其他元素）                         */
	/************************************************************************/
	void TestDeque(void);

	/************************************************************************/
	/* 固定大小的数组，不可以改变元素个数，只能改变元素值                   */
	/* 必须在建立时就确定大小                                               */
	/************************************************************************/
	void TestArray(void);

	/************************************************************************/
	/* 由双向链表实现,每个元素存在部分内存指向前导和后继元素                */
	/* 不提供随机访问,访问元素需要从链表头顺序移动到所需位置                */
	/* 在任何位置插入或删除都非常迅速                                       */
	/* 访问元素效率比vector/deque低,插入删除比vector/deque高                */
	/************************************************************************/
	void TestList(void);

	/************************************************************************/
	/* 受限的std::list                                                      */
	/* 节省内存，只指向下一个元素                                           */
	/************************************************************************/
	void TestForwardList(void);
};

